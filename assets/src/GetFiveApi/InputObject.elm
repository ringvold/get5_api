-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GetFiveApi.InputObject exposing (..)

import GetFiveApi.Interface
import GetFiveApi.Object
import GetFiveApi.Scalar
import GetFiveApi.ScalarCodecs
import GetFiveApi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


buildPlayerInput :
    PlayerInputRequiredFields
    -> (PlayerInputOptionalFields -> PlayerInputOptionalFields)
    -> PlayerInput
buildPlayerInput required____ fillOptionals____ =
    let
        optionals____ =
            fillOptionals____
                { name = Absent }
    in
    { id = required____.id, name = optionals____.name }


type alias PlayerInputRequiredFields =
    { id : String }


type alias PlayerInputOptionalFields =
    { name : OptionalArgument String }


{-| Type for the PlayerInput input object.
-}
type alias PlayerInput =
    { id : String
    , name : OptionalArgument String
    }


{-| Encode a PlayerInput into a value that can be used as an argument.
-}
encodePlayerInput : PlayerInput -> Value
encodePlayerInput input____ =
    Encode.maybeObject
        [ ( "id", Encode.string input____.id |> Just ), ( "name", Encode.string |> Encode.optional input____.name ) ]
