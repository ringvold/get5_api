-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GetFiveApi.Enum.SeriesType exposing (..)

import Json.Decode as Decode exposing (Decoder)


type SeriesType
    = Bo1
    | Bo1Preset
    | Bo2
    | Bo3
    | Bo5
    | Bo7


list : List SeriesType
list =
    [ Bo1, Bo1Preset, Bo2, Bo3, Bo5, Bo7 ]


decoder : Decoder SeriesType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "BO1" ->
                        Decode.succeed Bo1

                    "BO1_PRESET" ->
                        Decode.succeed Bo1Preset

                    "BO2" ->
                        Decode.succeed Bo2

                    "BO3" ->
                        Decode.succeed Bo3

                    "BO5" ->
                        Decode.succeed Bo5

                    "BO7" ->
                        Decode.succeed Bo7

                    _ ->
                        Decode.fail ("Invalid SeriesType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : SeriesType -> String
toString enum____ =
    case enum____ of
        Bo1 ->
            "BO1"

        Bo1Preset ->
            "BO1_PRESET"

        Bo2 ->
            "BO2"

        Bo3 ->
            "BO3"

        Bo5 ->
            "BO5"

        Bo7 ->
            "BO7"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe SeriesType
fromString enumString____ =
    case enumString____ of
        "BO1" ->
            Just Bo1

        "BO1_PRESET" ->
            Just Bo1Preset

        "BO2" ->
            Just Bo2

        "BO3" ->
            Just Bo3

        "BO5" ->
            Just Bo5

        "BO7" ->
            Just Bo7

        _ ->
            Nothing
